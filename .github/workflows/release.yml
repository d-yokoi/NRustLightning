name: publish(stable release)
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  pack_and_push:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup 3.1.200 .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.200
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: rust-lightning/target
          key: ${{ matrix.os }}-cargo-build-target-${{ hashFiles('rust-lightning/Cargo.lock') }}-${{ hashFiles('rust-lightning/**/src/**') }}

      - name: pack
        run: |
            dotnet pack -p:Configuration=Release src/NRustLightning

      # workaround for upload-release-asset does not support variable expansion.
      # see: https://github.com/actions/upload-release-asset/issues/17
      - name: get version
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_versoin.outputs.VERSION }}
          draft: false
          prerelease: true # TODO: change to false when ready

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/NRustLightning/bin/Release/NRustLightning.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_name: NRustLightning-${{ matrix.os }}.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_content_type: application/zip

